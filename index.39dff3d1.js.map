{"mappings":"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","sources":["src/js/genres.js","src/js/find-movie.js"],"sourcesContent":["export const genres = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ];","\nimport {genres} from './genres.js';\n\nconst API_KEY = 'api_key=a3ba6241cf3e8caa1456599894b81cc2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_URL = `${BASE_URL}/discover/movie?sort_by=popularity.desc&${API_KEY}`;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = `${BASE_URL}/search/movie?${API_KEY}`;\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('form');\nconst search = document.getElementById('search');\nconst tagsEl = document.getElementById('tags');\n\nconst prev = document.getElementById('prev');\nconst current = document.getElementById('current');\nconst next = document.getElementById('next');\n\nlet currentPage = 1;\nlet nextPage = 2;\nlet prevPage = 3;\nlet lastUrl = '';\nlet totalPages = 1000;\n\n\nlet selectedGenre = [];\n\nsetGenre();\n function setGenre(){      \n    tagsEl.innerHTML = '';\n    genres.forEach(({id, name}) =>{\n        const t = document.createElement('div');\n        t.classList.add('tag');\n        t.id = id;\n        t.innerText = name;\n        t.addEventListener('click', ()=>{\n            if(selectedGenre.length ===0){\n                selectedGenre.push(id);\n            }else{\n                if(selectedGenre.includes(id)){\n                    selectedGenre = selectedGenre.filter(genreId => genreId !== id);\n                }else{\n                    selectedGenre.push(id);  \n                }\n            }\n            console.log(selectedGenre);\n            getMovies(API_URL + '&with_genres='+encodeURI(selectedGenre.join(',')))\n            highlightSelection();\n        })\n        tagsEl.append(t);\n    })\n}\n\nfunction highlightSelection(){\n    const tags = document.querySelectorAll('.tag');\n    tags.forEach(tag => {\n        tag.classList.remove('highlight');\n    })\n    clearBtn();\n    if(selectedGenre.length !== 0){\n        selectedGenre.forEach(id =>{\n            const highlightedTag = document.getElementById(id);\n            highlightedTag.classList.add('highlight');\n        })\n    }\n}\n\nfunction clearBtn(){\n    let clearBtn = document.getElementById('clear');\n    if(clearBtn){\n        clearBtn.classList.add('clear-btn');\n    } else {\n        let clear = document.createElement('div');\n        clear.classList.add(\"tag\", \"clear-btn\");\n        clear.id = 'clear';\n        clear.innerText = 'Clear X';\n        clear.addEventListener('click', () =>{\n            selectedGenre = [];\n            setGenre();\n            getMovies(API_URL);\n        })\n        tags.append(clear);\n    }\n}\n\n\ngetMovies(API_URL);\nfunction getMovies(url){\n    lastUrl = url;\n    fetch(url).then(res => res.json()).then(data => {\n        // console.log(data)\n        if(data.results.length !== 0){\n            showMovies(data.results);\n            \n            currentPage = data.page;\n            nextPage = currentPage + 1;\n            prevPage = currentPage - 1;\n            totalPages = data.total_pages;\n\n            current.innerText = currentPage;\n            if(currentPage <= 1){\n                prev.classList.add('disabled');\n                next.classList.remove('disabled');                \n            } else if(currentPage >= totalPages){\n                prev.classList.remove('disabled');\n                next.classList.add('disabled');  \n            }else {\n                prev.classList.remove('disabled');\n                next.classList.remove('disabled');  \n            }\n            tagsEl.scrollIntoView({behavior: 'smooth'})\n\n        }else{\n            main.innerHTML = `<h2 class=\"no-results\">No results found</h2>`;\n        }                \n    })\n}\n\nfunction showMovies(data){\n    main.innerHTML='';\n    data.forEach(movie => {\n        const {title, poster_path, vote_average, overview} = movie;\n        const movieEl = document.createElement('div');\n        movieEl.classList.add('movie');\n        movieEl.innerHTML = `\n        <img src=\"${poster_path? IMG_URL+poster_path: \"http://via.placeholder.com/1080x1580\" }\" alt=\"${title}\" width=\"300\" height=\"450\">\n        <div class=\"movie-info\">\n        <h3>${title}</h3>\n        <span class=\"${getColor(vote_average)}\">${vote_average.toFixed(1)}</span>        \n        </div>\n\n        <div class=\"overview\">\n        <h3>Overview</h3>\n        ${overview}\n        </div>\n        `\n        main.appendChild(movieEl);\n    })\n}\n\nfunction getColor(vote) {\n    if(vote>= 8){\n        return 'green'\n    }else if(vote >= 5){\n        return \"orange\"\n    }else{\n        return 'red'\n    }\n}\n\nform.addEventListener ('submit', (e) =>{\n    e.preventDefault();\n    const searchTerm = search.value;\n    selectedGenre = [];\n    highlightSelection();\n    if(searchTerm){\n        getMovies(searchURL+'&query='+searchTerm);\n    }else{\n        getMovies(API_URL);\n    }\n})\n\nprev.addEventListener ('click', () => {\n    if(prevPage > 0){\n        pageCall(prevPage);\n    }\n})\n\n\nnext.addEventListener ('click', () => {\n    if(nextPage <= totalPages){\n        pageCall(nextPage);\n    }\n})\n\nfunction pageCall(page){    \n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if(key[0] !== page){\n        let url = lastUrl + \"&page=\" + page\n        getMovies(url)\n    } else {\n        key[1] = page.toString()\n        let a = key.join('=');\n        queryParams[queryParams.length - 1] = a;\n        let b = queryParams.join('&');\n        let url = urlSplit[0] + '?' + b;\n        getMovies(url);\n    }\n}\n\n\n// const prev = document.getElementById('prev');\n// const next = document.getElementById('next');\n\n// let currentPage = 1;\n\n// prev.addEventListener('click', () => {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     updatePagination();\n//   }\n// });\n\n// next.addEventListener('click', () => {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     updatePagination();\n//   }\n// });\n\n// function updatePagination() {\n//   const page1 = document.getElementById('page-1');\n//   const page2 = document.getElementById('page-2');\n//   const page3 = document.getElementById('page-3');\n//   const page4 = document.getElementById('page-4');\n//   const page5 = document.getElementById('page-5');\n\n//   if (currentPage <= 3) {\n//     page1.innerText = '1';\n//     page2.innerText = '2';\n//     page3.innerText = '3';\n//     page4.innerText = '4';\n//     page5.innerText = '5';\n//   } else if (currentPage >= totalPages - 2) {\n//     page1.innerText = totalPages - 4;\n//     page2.innerText = totalPages - 3;\n//     page3.innerText = totalPages - 2;\n//     page4.innerText = totalPages - 1;\n//     page5.innerText = totalPages;\n//   } else {\n//     page1.innerText = currentPage - 2;\n//     page2.innerText = currentPage - 1;\n//     page3.innerText = currentPage;\n//     page4.innerText = currentPage + 1;\n//     page5.innerText = currentPage + 2;\n//   }\n\n//   const current = document.querySelector('.current');\n//   current.classList.remove('current');\n//   const currentEl = document.getElementById(`page-${currentPage}`);\n//   currentEl.classList.add('current');\n\n//   if (currentPage === 1) {\n//     prev.classList.add('disabled');\n//   } else {\n//     prev.classList.remove('disabled');\n//   }\n\n//   if (currentPage === totalPages) {\n//     next.classList.add('disabled');\n//   } else {\n//     next.classList.remove('disabled');\n//   }\n// }\n\n// updatePagination();\n"],"names":["$a9bf4680370b89e9$export$be3a0ca764f9df2b","id","name","$fde9126656d2fd1f$var$API_URL","$fde9126656d2fd1f$var$main","document","getElementById","$fde9126656d2fd1f$var$form","$fde9126656d2fd1f$var$search","$fde9126656d2fd1f$var$tagsEl","$fde9126656d2fd1f$var$prev","$fde9126656d2fd1f$var$current","$fde9126656d2fd1f$var$next","$fde9126656d2fd1f$var$currentPage","$fde9126656d2fd1f$var$nextPage","$fde9126656d2fd1f$var$prevPage","$fde9126656d2fd1f$var$lastUrl","$fde9126656d2fd1f$var$totalPages","$fde9126656d2fd1f$var$selectedGenre","$fde9126656d2fd1f$var$setGenre","innerHTML","forEach","t","createElement","classList","add","innerText","addEventListener","length","push","includes","filter","genreId","console","log","$fde9126656d2fd1f$var$getMovies","encodeURI","join","$fde9126656d2fd1f$var$highlightSelection","append","querySelectorAll","tag","remove","$fde9126656d2fd1f$var$clearBtn","clearBtn1","clear","tags","url","fetch","then","res","json","data","results","movie","title","poster_path","vote_average","overview","movieEl","vote","toFixed","appendChild","$fde9126656d2fd1f$var$showMovies","page","total_pages","scrollIntoView","behavior","$fde9126656d2fd1f$var$pageCall","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$fde9126656d2fd1f$var$searchURL"],"version":3,"file":"index.39dff3d1.js.map"}